# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow helps you trigger a SonarQube analysis of your code and populates
# GitHub Code Scanning alerts with the vulnerabilities found.
# (this feature is available starting from SonarQube 9.7, Developer Edition and above)

# 1. Make sure you add a valid GitHub configuration to your SonarQube (Administration > DevOps platforms > GitHub)

# 2. Import your project on SonarQube
#     * Add your repository as a new project by clicking "Create project" from your homepage.
#
# 3. Select GitHub Actions as your CI and follow the tutorial
#     * a. Generate a new token and add it to your GitHub repository's secrets using the name SONAR_TOKEN
#          (On SonarQube, click on your avatar on top-right > My account > Security or ask your administrator)
#
#     * b. Copy/paste your SonarQube host URL to your GitHub repository's secrets using the name SONAR_HOST_URL
#
#     * c. Copy/paste the project Key into the args parameter below
#          (You'll find this information in SonarQube by following the tutorial or by clicking on Project Information at the top-right of your project's homepage)

# Feel free to take a look at our documentation (https://docs.sonarqube.org/latest/analysis/github-integration/)
# or reach out to our community forum if you need some help (https://community.sonarsource.com/c/sq/10)

name: SonarQube analysis

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  
jobs:
  sonarcloud:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Adjust to your Node.js version

      # Step 3: Install project dependencies
      - name: Install Dependencies
        run: npm install

      # Step 4: Run tests and generate coverage report (optional)
     # - name: Run Tests and Generate Coverage
     #   run: npm test -- --coverage  # Ensure your test command generates coverage

      # Step 5: Install SonarScanner CLI
      - name: Install SonarScanner CLI
        run: npm install -g sonarqube-scanner@latest  # Install the latest version

      # Step 6: Run SonarCloud Scan
      - name: Run SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # Ensure SONAR_TOKEN is set in GitHub Secrets
        run: |
          npm run build  # Run your build command if your project needs it
          npx sonar-scanner -X \  # Enable debug logging
            -Dsonar.projectKey=my_project_key \  # Replace with your project key
            -Dsonar.organization=my_organization \  # Replace with your organization
            -Dsonar.sources=src \  # Source directory
            -Dsonar.host.url=https://sonarcloud.io \  # SonarCloud URL
            -Dsonar.login=$SONAR_TOKEN  # Sonar token for authentication
